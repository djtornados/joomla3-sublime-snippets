<snippet>
	<content><![CDATA[/**
 * ${1/(.+)/\u\1/g} controller class.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 * @author      $TM_FULLNAME <$TM_EMAIL>
 * @since       $TM_VERSION
 */
class ${TM_COMPONENT/(.+)/\u\1/g}Controller${1:${TM_FILENAME/(.*?)(\..+)/\u$1/}} extends JControllerForm
{
	/**
	 * The prefix to use with controller messages.
	 *
	 * @var     string
	 * @since   $TM_VERSION
	 */
	protected \$text_prefix = 'COM_${TM_COMPONENT/(.+)/\U\1/g}_${1/(.+)/\U\1/g}';

	/**
	 * Constructor.
	 *
	 * @param   array  \$config  An optional associative array of configuration settings.
	 *
	 * @see     JControllerForm
	 * @since   $TM_VERSION
	 */
	public function __construct(\$config = array())
	{
		parent::__construct(\$config);

		// An ${1/(.+)/\L\1/g} edit form can come from the ${2/(.+)/\L\1/g} or featured view.
		// Adjust the redirect view on the value of 'return' in the request.
		if (\$this->input->get('return') == 'featured')
		{
			\$this->view_list = 'featured';
			\$this->view_item = '${1/(.+)/\L\1/g}&return=featured';
		}
	}

	/**
	 * Method override to check if you can add a new record.
	 *
	 * @param   array  \$data  An array of input data.
	 *
	 * @return  boolean
	 *
	 * @since   $TM_VERSION
	 */
	protected function allowAdd(\$data = array())
	{
		// Get the current user object.
		\$user = JFactory::getUser();

		return (\$user->authorise('core.create', 'com_${TM_COMPONENT/(.+)/\L\1/g}'));
	}

	/**
	 * Method override to check if you can edit an existing record.
	 *
	 * @param   array   \$data  An array of input data.
	 * @param   string  \$key   The name of the key for the primary key.
	 *
	 * @return  boolean
	 *
	 * @since   $TM_VERSION
	 */
	protected function allowEdit(\$data = array(), \$key = 'id')
	{
		// Initialiase variables.
		\$recordId = (int) isset(\$data[\$key]) ? \$data[\$key] : 0;
		\$user     = JFactory::getUser();
		\$userId   = \$user->get('id');

		// Check general edit permission first.
		if (\$user->authorise('core.edit', 'com_${TM_COMPONENT/(.+)/\L\1/g}.${TM_FILENAME/(.*?)(\..+)/\L$1/}.' . \$recordId))
		{
			return true;
		}

		// Fallback on edit.own.
		// First test if the permission is available.
		if (\$user->authorise('core.edit.own', 'com_${TM_COMPONENT/(.+)/\L\1/g}.${TM_FILENAME/(.*?)(\..+)/\L$1/}.' . \$recordId))
		{
			// Now test the owner is the user.
			\$ownerId = (int) isset(\$data['created_by']) ? \$data['created_by'] : 0;

			if (empty(\$ownerId) && \$recordId)
			{
				// Need to do a lookup from the model.
				\$record = \$this->getModel()->getItem(\$recordId);

				if (empty(\$record))
				{
					return false;
				}

				\$ownerId = \$record->created_by;
			}

			// If the owner matches 'me' then do the test.
			if (\$ownerId == \$userId)
			{
				return true;
			}
		}

		// Since there is no asset tracking, revert to the component permissions.
		return parent::allowEdit(\$data, \$key);
	}

	/**
	 * Method to run batch operations.
	 *
	 * @param   object  \$model  The model.
	 *
	 * @return  boolean  True if successful, false otherwise and internal error is set.
	 *
	 * @since   $TM_VERSION
	 */
	public function batch(\$model = null)
	{
		// Check for request forgeries.
		JSession::checkToken() or die(JText::_('JINVALID_TOKEN'));

		// Set the model.
		\$model = \$this->getModel('${1/(.+)/\u\1/g}', '${TM_COMPONENT/(.+)/\u\1/g}Model', array());

		// Preset the redirect.
		\$this->setRedirect(JRoute::_('index.php?option=com_${TM_COMPONENT/(.+)/\L\1/g}&view=${2:${1/(.+)/\L\1/g}s}' . \$this->getRedirectToListAppend(), false));

		return parent::batch(\$model);
	}
}

]]></content>
	<tabTrigger>jadmincontrolleredit-nocategory</tabTrigger>
	<scope>source.php</scope>
</snippet>
