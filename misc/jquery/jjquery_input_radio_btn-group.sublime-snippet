<snippet>
	<content><![CDATA[// Turn radios into btn-group.
\$('.radio.btn-group label').addClass('btn');

\$(".btn-group label:not(.active)").click(function () {
	var label = \$(this);
	var input = \$('#' + label.attr('for'));

	if (!input.prop('checked')) {
		label.closest('.btn-group').find("label").removeClass('active btn-success btn-danger btn-primary');
		if (input.val() == '') {
			label.addClass('active btn-primary');
		} else if (input.val() == 0) {
			label.addClass('active btn-danger');
		} else {
			label.addClass('active btn-success');
		}
		input.prop('checked', true);
	}
});

\$(".btn-group input[checked=checked]").each(function () {
	if (\$(this).val() == '') {
		\$("label[for=" + \$(this).attr('id') + "]").addClass('active btn-primary');
	} else if (\$(this).val() == 0) {
		\$("label[for=" + \$(this).attr('id') + "]").addClass('active btn-danger');
	} else {
		\$("label[for=" + \$(this).attr('id') + "]").addClass('active btn-success');
	}
});

<!-- Put this in CSS file -->

/* Radio btn-group */
.radio.btn-group input[type=radio] {
	display: none;
}

.radio.btn-group > label:first-of-type {
	margin-left: 0;
	-webkit-border-bottom-left-radius: 4px;
	border-bottom-left-radius: 4px;
	-webkit-border-top-left-radius: 4px;
	border-top-left-radius: 4px;
	-moz-border-radius-bottomleft: 4px;
	-moz-border-radius-topleft: 4px;
}

fieldset.radio.btn-group {
	padding-left: 0;
}]]></content>
	<tabTrigger>jjquery_input_radio_btn-group</tabTrigger>
	<scope>source.js</scope>
</snippet>
