.
	 *
	 * @return  mixed  An array of objects on success, false on failure.
	 *
	 * @since   1.6
	 */
	public function getItems()
	{
		// Invoke the parent getItems method to get the main list
		\$items = parent::getItems();

		// Convert the params field into an object, saving original in _params
		for (\$i = 0, \$n = count(\$items); \$i < \$n; \$i++)
		{
			\$item = &\$items[\$i];

			if (!isset(\$this->_params))
			{
				\$params = new JRegistry;
				\$params->loadString(\$item->params);
				\$item->params = \$params;
			}
		}

		return \$items;
	}

	/**
	 * Method to build an SQL query to load the list data.
	 *
	 * @return  string  An SQL query
	 *
	 * @since   1.6
	 */
	protected function getListQuery()
	{
		// Initialiase variables.
		\$user   = JFactory::getUser();
		\$groups = implode(',', \$user->getAuthorisedViewLevels());

		// Create a new query object.
		\$db     = \$this->getDbo();
		\$query  = \$db->getQuery(true);

		// Select the required fields from the table.
		\$query->select(
			\$this->getState(
				'list.select',
				'a.id, a.catid, a.${2/(.+)/\L\1/g}, a.alias, a.checked_out, a.checked_out_time'
				. ', a.hits'
				.