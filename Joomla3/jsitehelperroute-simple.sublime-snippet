<snippet>
	<content><![CDATA[/**
 * ${TM_PROJECT/(.+)/\u\1/g} Component Route Helper
 *
 * @static
 * @package     ${TM_PROJECT/(.+)/\u\1/g}
 * @subpackage  com_${TM_PROJECT/(.+)/\L\1/g}
 * @since       $TM_VERSION
 */
abstract class ${TM_PROJECT/(.+)/\u\1/g}HelperRoute
{
	protected static \$lookup;

	/**
	 * Method to get a route configuration for the ${1/(.+)/\L\1/g} view.
	 *
	 * @param   int  \$id  The route of the ${1/(.+)/\L\1/g}.
	 *
	 * @return  string
	 *
	 * @since   $TM_VERSION
	 */
	public static function get${1:${TM_PROJECT/(.+)(s\b)/\u\1/g}}Route(\$id)
	{
		// Initialiase variables.
		\$needles = array(
			'${1/(.+)/\L\1/g}' => array((int) \$id)
		);

		// Create the link.
		\$link = 'index.php?option=com_${TM_PROJECT/(.+)/\L\1/g}&view=${1/(.+)/\L\1/g}&id=' . \$id;

		if (\$item = self::_findItem(\$needles))
		{
			\$link .= '&Itemid=' . \$item;
		}
		elseif (\$item = self::_findItem())
		{
			\$link .= '&Itemid=' . \$item;
		}

		return \$link;
	}

	/**
	 * Method to find the item.
	 *
	 * @param   array  \$needles  The needles to find.
	 *
	 * @return  null
	 *
	 * @since   $TM_VERSION
	 */
	protected static function _findItem(\$needles = null)
	{
		// Initialiase variables.
		\$app   = JFactory::getApplication();
		\$menus = \$app->getMenu('site');

		// Prepare the reverse lookup array.
		if (self::\$lookup === null)
		{
			self::\$lookup = array();

			\$component = JComponentHelper::getComponent('com_${TM_PROJECT/(.+)/\L\1/g}');
			\$items     = \$menus->getItems('component_id', \$component->id);

			if (\$items)
			{
				foreach (\$items as \$item)
				{
					if (isset(\$item->query) && isset(\$item->query['view']))
					{
						\$view = \$item->query['view'];

						if (!isset(self::\$lookup[\$view]))
						{
							self::\$lookup[\$view] = array();
						}

						if (isset(\$item->query['id']))
						{
							self::\$lookup[\$view][\$item->query['id']] = \$item->id;
						}
					}
				}
			}
		}

		if (\$needles)
		{
			foreach (\$needles as \$view => \$ids)
			{
				if (isset(self::\$lookup[\$view]))
				{
					foreach (\$ids as \$id)
					{
						if (isset(self::\$lookup[\$view][(int) \$id]))
						{
							return self::\$lookup[\$view][(int) \$id];
						}
					}
				}
			}
		}
		else
		{
			\$active = \$menus->getActive();

			if (\$active)
			{
				return \$active->id;
			}
		}

		return null;
	}
}

]]></content>
	<tabTrigger>jsitehelperroute-simple</tabTrigger>
	<scope>source.php</scope>
</snippet>
