<snippet>
	<content><![CDATA[// Load the backend controller.
require_once JPATH_ADMINISTRATOR . '/components/com_users/controllers/users.php';

/**
 * ${1/(.+)/\u\1/g} list controller class.
 *
 * @package     ${TM_PROJECT/(.+)/\u\1/g}
 * @subpackage  com_${TM_PROJECT/(.+)/\L\1/g}
 * @since       $TM_VERSION
 */
class ${TM_PROJECT/(.+)/\u\1/g}Controller${1:Plural} extends UsersControllerUsers
{
	/**
	 * Constructor.
	 *
	 * @param   array  \$config  An optional associative array of configuration settings.
	 *
	 * @since   $TM_VERSION
	 * @see     JController
	 */
	public function __construct(\$config = array())
	{
		parent::__construct(\$config);

		// Load the users component language file.
		\$lang = JFactory::getLanguage();
		\$lang->load('com_users', JPATH_ADMINISTRATOR);
		\$lang->load('com_users', JPATH_ADMINISTRATOR . '/components/com_users');
	}

	/**
	 * Method to get a model object, loading it if required.
	 *
	 * @param   string  \$name    The model name. Optional.
	 * @param   string  \$prefix  The class prefix. Optional.
	 * @param   array   \$config  Configuration array for model. Optional.
	 *
	 * @return  object  The model.
	 *
	 * @since   $TM_VERSION
	 */
	public function getModel(\$name = '${2:${1/(.+)(s\b)/\u\1/g}}', \$prefix = '${TM_PROJECT/(.+)/\u\1/g}Model', \$config = array('ignore_request' => true))
	{
		\$model = parent::getModel(\$name, \$prefix, \$config);

		return \$model;
	}

	/**
	 * Method to change the block status on a record.
	 *
	 * @return  void
	 *
	 * @since   $TM_VERSION
	 */
	public function changeBlock()
	{
		// Check for request forgeries.
		JSession::checkToken() or jexit(JText::_('JINVALID_TOKEN'));

		// Initialiase variables.
		\$ids    = \$this->input->get('cid', array(), 'array');
		\$values = array('block' => 1, 'unblock' => 0);
		\$task   = \$this->getTask();
		\$value  = JArrayHelper::getValue(\$values, \$task, 0, 'int');

		if (empty(\$ids))
		{
			JError::raiseWarning(500, JText::_('COM_USERS_USERS_NO_ITEM_SELECTED'));
		}
		else
		{
			// Get the model.
			\$model = \$this->getModel();

			// Change the state of the records.
			if (!\$model->block(\$ids, \$value))
			{
				JError::raiseWarning(500, \$model->getError());
			}
			else
			{
				if (\$value == 1)
				{
					\$this->setMessage(JText::plural('COM_USERS_N_USERS_BLOCKED', count(\$ids)));
				}
				elseif (\$value == 0)
				{
					\$this->setMessage(JText::plural('COM_USERS_N_USERS_UNBLOCKED', count(\$ids)));
				}
			}
		}

		\$this->setRedirect('index.php?option=com_${TM_PROJECT/(.+)/\L\1/g}&view=${1/(.+)/\L\1/g}');
	}

	/**
	 * Method to activate a record.
	 *
	 * @return  void
	 *
	 * @since   $TM_VERSION
	 */
	public function activate()
	{
		// Check for request forgeries.
		JSession::checkToken() or jexit(JText::_('JINVALID_TOKEN'));

		// Initialiase variables.
		\$ids = \$this->input->get('cid', array(), 'array');

		if (empty(\$ids))
		{
			JError::raiseWarning(500, JText::_('COM_USERS_USERS_NO_ITEM_SELECTED'));
		}
		else
		{
			// Get the model.
			\$model = \$this->getModel();

			// Change the state of the records.
			if (!\$model->activate(\$ids))
			{
				JError::raiseWarning(500, \$model->getError());
			}
			else
			{
				\$this->setMessage(JText::plural('COM_USERS_N_USERS_ACTIVATED', count(\$ids)));
			}
		}

		\$this->setRedirect('index.php?option=com_${TM_PROJECT/(.+)/\L\1/g}&view=${1/(.+)/\L\1/g}');
	}
}

]]></content>
	<tabTrigger>jadmincontrollerlist-users</tabTrigger>
	<scope>source.php</scope>
</snippet>
