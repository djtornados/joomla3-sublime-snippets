<snippet>
	<content><![CDATA[/**
 * Method to set a template ${2/(.+)/\L\1/g} as ${1/(.+)/\L\1/g}.
 *
 * @param   int  \$id  The primary key ID for the ${2/(.+)/\L\1/g}.
 *
 * @return  boolean  True if successful.
 *
 * @throws  Exception
 * @since   $TM_VERSION
 */
public function set${1:Home}(\$id = 0)
{
	// Initialiase variables.
	\$user = JFactory::getUser();
	\$db   = \$this->getDbo();

	// Access checks.
	if (!\$user->authorise('core.edit.state', 'com_${TM_PROJECT/(.+)/\L\1/g}'))
	{
		throw new Exception(JText::_('JLIB_APPLICATION_ERROR_EDITSTATE_NOT_PERMITTED'));
	}

	\$${2/(.+)/\L\1/g} = JTable::getInstance('${2:Table}', '${TM_PROJECT/(.+)/\u\1/g}Table');

	if (!\$${2/(.+)/\L\1/g}->load((int) \$id))
	{
		throw new Exception(JText::_('COM_${TM_PROJECT/(.+)/\U\1/g}_ERROR_${2/(.+)/\U\1/g}_NOT_FOUND'));
	}

	// Detect disabled row.
	if (\$${2/(.+)/\L\1/g}->state == 0 || \$${2/(.+)/\L\1/g}->state == -2)
	{
		throw new Exception(JText::_('COM_${TM_PROJECT/(.+)/\U\1/g}_ERROR_SAVE_DISABLED_${2/(.+)/\U\1/g}'));
	}

	// Detect archived row.
	if (\$${2/(.+)/\L\1/g}->state == 2)
	{
		throw new Exception(JText::_('COM_${TM_PROJECT/(.+)/\U\1/g}_ERROR_SAVE_ARCHIVED_${2/(.+)/\U\1/g}'));
	}

	// Reset the ${1/(.+)/\L\1/g} fields.
	\$db->setQuery(
		'UPDATE #__${TM_PROJECT/(.+)/\L\1/g}${3:_${2/(.+)/\L\1/g}s}' .
		' SET ${1/(.+)/\L\1/g} = \'0\'' .
		' WHERE ${1/(.+)/\L\1/g} = \'1\''
	);
	\$db->execute();

	// Set the new ${1/(.+)/\L\1/g} ${2/(.+)/\L\1/g}.
	\$db->setQuery(
		'UPDATE #__${TM_PROJECT/(.+)/\L\1/g}${3/(.+)/\L\1/g}' .
		' SET ${1/(.+)/\L\1/g} = \'1\'' .
		' WHERE id = ' . (int) \$id
	);
	\$db->execute();

	// Clean the cache.
	\$this->cleanCache();

	return true;
}]]></content>
	<tabTrigger>jadminmodeledit_setdefault</tabTrigger>
	<scope>source.php</scope>
</snippet>
