<snippet>
	<content><![CDATA[/**
 * Featured View class.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 * @since       $TM_VERSION
 */
class ${TM_COMPONENT/(.+)/\u\1/g}ViewFeatured extends JViewLegacy
{
	protected \$state;

	protected \$items;

	protected \$category;

	protected \$categories;

	protected \$pagination;

	/**
	 * Method to display the view.
	 *
	 * @param   string  \$tpl  The template file to include.
	 *
	 * @return  mixed  False on error, null otherwise.
	 *
	 * @since   $TM_VERSION
	 */
	public function display(\$tpl = null)
	{
		// Initialise variables.
		\$app        = JFactory::getApplication();
		\$params     = \$app->getParams();

		// Get some data from the models.
		\$state      = \$this->get('State');
		\$items      = \$this->get('Items');
		\$category   = \$this->get('Category');
		\$children   = \$this->get('Children');
		\$parent     = \$this->get('Parent');
		\$pagination = \$this->get('Pagination');

		// Check for errors.
		if (count(\$errors = \$this->get('Errors')))
		{
			JError::raiseWarning(500, implode("\n", \$errors));
			return false;
		}

		// Check whether category access level allows access.
		\$user   = JFactory::getUser();
		\$groups = \$user->getAuthorisedViewLevels();

		// Prepare the data.
		// Compute the ${1:${TM_COMPONENT/(.+)(s\b)/\L\1/g}} slug.
		for (\$i = 0, \$n = count(\$items); \$i < \$n; \$i++)
		{
			\$item           = &\$items[\$i];
			\$item->slug     = \$item->alias ? (\$item->id . ':' . \$item->alias) : \$item->id;
			\$item->catslug  = \$item->category_alias ? (\$item->catid . ':' . \$item->category_alias) : \$item->catid;
			\$item->link     = ${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${1/(.+)/\u\1/g}Route(\$item->slug, \$item->catslug);
			\$item->cat_link = ${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::getCategoryRoute(\$item->catslug);

			\$temp          = new JRegistry;
			\$temp->loadString(\$item->params);
			\$item->params  = clone(\$params);
			\$item->params->merge(\$temp);
		}

		// Escape strings for HTML output.
		\$this->pageclass_sfx = htmlspecialchars(\$params->get('pageclass_sfx'));

		\$maxLevel         = \$params->get('maxLevel', -1);
		\$this->maxLevel   = &\$maxLevel;
		\$this->state      = &\$state;
		\$this->items      = &\$items;
		\$this->category   = &\$category;
		\$this->children   = &\$children;
		\$this->params     = &\$params;
		\$this->parent     = &\$parent;
		\$this->pagination = &\$pagination;

		\$this->_prepareDocument();

		parent::display(\$tpl);
	}

	/**
	 * Prepares the document.
	 *
	 * @return  void
	 *
	 * @since   $TM_VERSION
	 */
	protected function _prepareDocument()
	{
		// Initialise variables.
		\$app     = JFactory::getApplication();
		\$menus   = \$app->getMenu();
		\$pathway = \$app->getPathway();
		\$title   = null;

		// Because the application sets a default page title,
		// we need to get it from the menu item itself.
		\$menu = \$menus->getActive();

		if (\$menu)
		{
			\$this->params->def('page_heading', \$this->params->get('page_title', \$menu->title));
		}
		else
		{
			\$this->params->def('page_heading', JText::_('COM_${TM_COMPONENT/(.+)/\U\1/g}_DEFAULT_PAGE_TITLE'));
		}

		\$title = \$this->params->get('page_title', '');

		\$pathway->addItem(\$title, '');

		if (empty(\$title))
		{
			\$title = \$app->getCfg('sitename');
		}
		elseif (\$app->getCfg('sitename_pagetitles', 0) == 1)
		{
			\$title = JText::sprintf('JPAGETITLE', \$app->getCfg('sitename'), \$title);
		}
		elseif (\$app->getCfg('sitename_pagetitles', 0) == 2)
		{
			\$title = JText::sprintf('JPAGETITLE', \$title, \$app->getCfg('sitename'));
		}

		\$this->document->setTitle(\$title);

		// Configure the document meta-description.
		if (\$this->params->get('menu-meta_description'))
		{
			\$this->document->setDescription(\$this->params->get('menu-meta_description'));
		}

		// Configure the document meta-keywords.
		if (\$this->params->get('menu-meta_keywords'))
		{
			\$this->document->setMetadata('keywords', \$this->params->get('menu-meta_keywords'));
		}

		// Configure the document robots.
		if (\$this->params->get('robots'))
		{
			\$this->document->setMetadata('robots', \$this->params->get('robots'));
		}
	}
}

]]></content>
	<tabTrigger>jsiteviewfeatured</tabTrigger>
	<scope>source.php</scope>
</snippet>
