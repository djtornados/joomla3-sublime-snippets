<snippet>
	<content><![CDATA[/**
 * CPF Form Rule class for the ${TM_COMPONENT/(.+)/\u\1/g}.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 * @since       $TM_VERSION
 */
class JFormRuleCpf extends JFormRule
{
	/**
	 * The regular expression to use in testing a form field value.
	 *
	 * @var     string
	 * @since   $TM_VERSION
	 */
	protected \$regex = '/^\d{3}\.\d{3}\.\d{3}\-\d{2}\$/';

	/**
	 * Method to test if the Captcha is correct.
	 *
	 * @param   SimpleXMLElement  \$element  The SimpleXMLElement object representing the <field /> tag for the form field object.
	 * @param   mixed             \$value    The form field value to validate.
	 * @param   string            \$group    The field name group control value. This acts as as an array container for the field.
	 *                                      For example if the field has name="foo" and the group value is set to "bar" then the
	 *                                      full field name would end up being "bar[foo]".
	 * @param   JRegistry         \$input    An optional JRegistry object with the entire data set to validate against the entire form.
	 * @param   JForm             \$form     The form object for which the field is being tested.
	 *
	 * @return  boolean  True if the value is valid, false otherwise.
	 *
	 * @since   $TM_VERSION
	 */
	public function test(SimpleXMLElement \$element, \$value, \$group = null, JRegistry \$input = null, JForm \$form = null)
	{
		// Test the value against the regular expression.
		if (preg_match(\$this->regex, \$value) == false)
		{
			return false;
		}

		// Initialiase variables.
		\$cpf = preg_replace("/[^0-9]/", "", \$value);
		\$digitOne = 0;
		\$digitTwo = 0;

		// Check first digit.
		for (\$i = 0, \$x = 10; \$i <= 8; \$i++, \$x--)
		{
			\$digitOne += \$cpf[\$i] * \$x;
		}

		\$calcOne = ((\$digitOne % 11) < 2) ? 0 : 11 - (\$digitOne % 11);

		// Check second digit.
		for (\$i = 0, \$x = 11; \$i <= 9; \$i++, \$x--)
		{
			if (str_repeat(\$i, 11) == \$cpf)
			{
				return false;
			}

			\$digitTwo += \$cpf[\$i] * \$x;
		}

		\$calcTwo = ((\$digitTwo % 11) < 2) ? 0 : 11 - (\$digitTwo % 11);

		// Test the CPF if is valid.
		if (\$calcOne <> \$cpf[9] || \$calcTwo <> \$cpf[10])
		{
			return false;
		}

		return true;
	}
}

]]></content>
	<tabTrigger>jsitemodelrulecpf</tabTrigger>
	<scope>source.php</scope>
</snippet>
