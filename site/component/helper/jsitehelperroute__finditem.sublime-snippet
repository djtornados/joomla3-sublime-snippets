<snippet>
	<content><![CDATA[/**
 * Method to find the item.
 *
 * @param   array  \$needles  The needles to find.
 *
 * @return  null
 *
 * @since   $TM_VERSION
 */
protected static function _findItem(\$needles = null)
{
	// Initialiase variables.
	\$app      = JFactory::getApplication();
	\$menus    = \$app->getMenu('site');
	\$language = isset(\$needles['language']) ? \$needles['language'] : '*';

	// Prepare the reverse lookup array.
	if (!isset(self::\$lookup[\$language]))
	{
		self::\$lookup[\$language] = array();

		\$component  = JComponentHelper::getComponent('com_${TM_COMPONENT/(.+)/\L\1/g}');
		\$attributes = array('component_id');
		\$values     = array(\$component->id);

		if (\$language != '*')
		{
			\$attributes[] = 'language';
			\$values[] = array(\$needles['language'], '*');
		}

		\$items = \$menus->getItems(\$attributes, \$values);

		foreach (\$items as \$item)
		{
			if (isset(\$item->query) && isset(\$item->query['view']))
			{
				\$view = \$item->query['view'];

				if (!isset(self::\$lookup[\$language][\$view]))
				{
					self::\$lookup[\$language][\$view] = array();
				}

				if (isset(\$item->query['id']))
				{
					/*
					Here it will become a bit tricky.
					language != * can override existing entries.
					language == * cannot override existing entries.
					 */
					if (!isset(self::\$lookup[\$language][\$view][\$item->query['id']]) || \$item->language != '*')
					{
						self::\$lookup[\$language][\$view][\$item->query['id']] = \$item->id;
					}
				}
			}
		}
	}

	if (\$needles)
	{
		foreach (\$needles as \$view => \$ids)
		{
			if (isset(self::\$lookup[\$language][\$view]))
			{
				foreach (\$ids as \$id)
				{
					if (isset(self::\$lookup[\$language][\$view][(int) \$id]))
					{
						return self::\$lookup[\$language][\$view][(int) \$id];
					}
				}
			}
		}
	}

	\$active = \$menus->getActive();

	if (\$active && \$active->component == 'com_${TM_COMPONENT/(.+)/\L\1/g}' && (\$active->language == '*' || !JLanguageMultilang::isEnabled()))
	{
		return \$active->id;
	}

	// If not found, return language specific home link.
	\$default = \$menus->getDefault(\$language);

	return !empty(\$default->id) ? \$default->id : null;
}]]></content>
	<tabTrigger>jsitehelperroute__finditem</tabTrigger>
	<scope>source.php</scope>
</snippet>
